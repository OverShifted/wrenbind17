(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{187:function(t,a,s){"use strict";s.r(a);var n=s(0),e=Object(n.a)({},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"wrenbind17"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#wrenbind17","aria-hidden":"true"}},[t._v("#")]),t._v(" WrenBind17")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://travis-ci.com/matusnovak/wrenbind17",target:"_blank",rel:"noopener noreferrer"}},[s("img",{attrs:{src:"https://travis-ci.com/matusnovak/wrenbind17.svg?branch=master",alt:"Build Status"}}),s("OutboundLink")],1),t._v(" "),s("a",{attrs:{href:"https://ci.appveyor.com/project/matusnovak/wrenbind17/branch/master",target:"_blank",rel:"noopener noreferrer"}},[s("img",{attrs:{src:"https://ci.appveyor.com/api/projects/status/fy974aj37cdyxc0i/branch/master?svg=true",alt:"Build status"}}),s("OutboundLink")],1),t._v(" "),s("a",{attrs:{href:"https://codecov.io/gh/matusnovak/wrenbind17",target:"_blank",rel:"noopener noreferrer"}},[s("img",{attrs:{src:"https://codecov.io/gh/matusnovak/wrenbind17/branch/master/graph/badge.svg",alt:"codecov"}}),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("WrenBind17 is a C++17 wrapper for "),s("a",{attrs:{href:"http://wren.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Wren programming language"),s("OutboundLink")],1),t._v(". This project was heavily inspired by "),s("a",{attrs:{href:"https://github.com/pybind/pybind11",target:"_blank",rel:"noopener noreferrer"}},[t._v("pybind11"),s("OutboundLink")],1),t._v(" and by "),s("a",{attrs:{href:"https://github.com/Nelarius/wrenpp",target:"_blank",rel:"noopener noreferrer"}},[t._v("Wren++"),s("OutboundLink")],1),t._v(". This library is header only and does not need any compilation steps. Simply include the "),s("code",[t._v("<wrenbind17/wrenbind17.hpp>")]),t._v(" header in your application and you are good to go!")]),t._v(" "),s("p",[t._v("How is this library unique from other Wren binding libraries?")]),t._v(" "),s("ul",[s("li",[t._v("Header only")]),t._v(" "),s("li",[t._v("C++17 so you don't need to use "),s("code",[t._v("decltype()")]),t._v(" on class methods to bind them to Wren.")]),t._v(" "),s("li",[t._v("Foreign modules are automatically generated for you. You don't need to write the extra foreign classes in separate file.")]),t._v(" "),s("li",[t._v("Supports strict type safety. You won't be able to pass just any variable from Wren back to the C++.")]),t._v(" "),s("li",[t._v("Objects are wrapped in "),s("code",[t._v("std::shared_ptr")]),t._v(" so you have easier access when passing objects around.")]),t._v(" "),s("li",[t._v("Easy binding system inspired by "),s("a",{attrs:{href:"https://github.com/pybind/pybind11",target:"_blank",rel:"noopener noreferrer"}},[t._v("pybind11"),s("OutboundLink")],1),t._v(".")]),t._v(" "),s("li",[t._v("Works with exceptions")])]),t._v(" "),s("h2",{attrs:{id:"example"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#example","aria-hidden":"true"}},[t._v("#")]),t._v(" Example")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("<wrenbind17/wrenbind17.hpp>")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" wren "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" wrenbind17"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Alias")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" argc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("argv"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" std"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("string code "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token raw-string string"}},[t._v('R"(\n        import "mymodule" for MyFoo, Vec3\n\n        class Main {\n            static main() {\n                var vec = Vec3.new(1.1, 2.2, 3.3)\n                // Do something with "vec"\n\n                var foo = MyFoo.new(2019, "Hello World")\n                System.print("Foo type: %(foo.type) ")\n                foo.year = 2020\n                return foo\n            }\n        }\n    )"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Create new VM")]),t._v("\n    wren"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("VM vm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Create new module")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("auto")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" m "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" vm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("module")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"mymodule"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Declare new class")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("auto")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" cls "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" m"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("klass"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("MyFoo"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"MyFoo"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Optional constructor with optional name")]),t._v("\n    cls"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ctor"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" std"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("string"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"new"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Define variables")]),t._v("\n    cls"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("var"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("MyFoo"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("message"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"message"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Direct access")]),t._v("\n    cls"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prop"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("MyFoo"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("getYear"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("MyFoo"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("setYear"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"year"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// As getter & getter")]),t._v("\n    cls"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("propReadonly"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("MyFoo"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("getType"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"type"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Read only variable")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// Append some extra stuff to the "mymodule"')]),t._v("\n    m"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("append")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token raw-string string"}},[t._v('R"(\n        class Vec3 {\n            construct new (x, y, z) {\n                _x = x\n                _y = y\n                _z = z\n            }\n        }\n    )"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// Runs the code from the std::string as a "main" module')]),t._v("\n    vm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("runFromSource")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"main"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" code"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Find the main() function")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// You can look for classes and their functions!")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("auto")]),t._v(" mainClass "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" vm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("find")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"main"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Main"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("auto")]),t._v(" main "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" mainClass"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("func")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"main()"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("auto")]),t._v(" res "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Execute the function")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Access the return value")]),t._v("\n    MyFoo"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" ptr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" res"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("as"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("MyFoo"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// As a raw pointer")]),t._v("\n    std"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("shared_ptr"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("MyFoo"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" sptr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" res"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("shared"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("MyFoo"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// As a shared ptr")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("assert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ptr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("assert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ptr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" sptr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"documentation"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#documentation","aria-hidden":"true"}},[t._v("#")]),t._v(" Documentation")]),t._v(" "),s("p",[t._v("Documentation at: "),s("a",{attrs:{href:"https://matusnovak.github.io/wrenbind17",target:"_blank",rel:"noopener noreferrer"}},[t._v("matusnovak.github.io/wrenbind17"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("Tutorials explaining the behavior at: "),s("a",{attrs:{href:"https://matusnovak.github.io/wrenbind17/docs/tutorial.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("matusnovak.github.io/wrenbind17/docs/tutorial.html"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("Autogenerated API documentation via Doxygen at: "),s("a",{attrs:{href:"https://matusnovak.github.io/wrenbind17/docs/doxygen/group__wrenbind17.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("matusnovak.github.io/wrenbind17/docs/doxygen/group__wrenbind17.html"),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"build"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#build","aria-hidden":"true"}},[t._v("#")]),t._v(" Build")]),t._v(" "),s("p",[t._v("There is no need to build this library, it's header only. Simply add the "),s("code",[t._v("#include <wrenbind17/wrenbind17.hpp>")]),t._v(" and link Wren to your application. That's all.")]),t._v(" "),s("h2",{attrs:{id:"found-a-bug-or-want-to-request-a-feature"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#found-a-bug-or-want-to-request-a-feature","aria-hidden":"true"}},[t._v("#")]),t._v(" Found a bug or want to request a feature?")]),t._v(" "),s("p",[t._v("Feel free to do it on GitHub issues")]),t._v(" "),s("h2",{attrs:{id:"pull-requests"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pull-requests","aria-hidden":"true"}},[t._v("#")]),t._v(" Pull requests")]),t._v(" "),s("p",[t._v("Pull requests are welcome")]),t._v(" "),s("h2",{attrs:{id:"license"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#license","aria-hidden":"true"}},[t._v("#")]),t._v(" License")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('MIT License\n\nCopyright (c) 2019 Matus Novak\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the "Software"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n')])])])])},[],!1,null,null,null);a.default=e.exports}}]);