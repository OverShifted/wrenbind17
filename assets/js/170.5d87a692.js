(window.webpackJsonp=window.webpackJsonp||[]).push([[170],{368:function(t,o,s){"use strict";s.r(o);var r=s(0),e=Object(r.a)({},(function(){var t=this,o=t.$createElement,s=t._self._c||o;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"tutorials"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tutorials","aria-hidden":"true"}},[t._v("#")]),t._v(" Tutorials")]),t._v(" "),s("ul",[s("li",[s("router-link",{attrs:{to:"/docs/tutorial_installation.html"}},[s("strong",[t._v("Installation")])]),t._v(" - Install and how to include this library.")],1),t._v(" "),s("li",[s("router-link",{attrs:{to:"/docs/tutorial_hello_world.html"}},[s("strong",[t._v("Hello World")])]),t._v(" - The most basic full example.")],1),t._v(" "),s("li",[s("router-link",{attrs:{to:"/docs/tutorial_executing_code.html"}},[s("strong",[t._v("Alternative ways of executing Wren code")])]),t._v(" - Run Wren code from file, string, module, etc.")],1),t._v(" "),s("li",[s("router-link",{attrs:{to:"/docs/tutorial_exceptions.html"}},[s("strong",[t._v("Handling exceptions")])]),t._v(" - Handling C++ exceptions inside of Wren.")],1),t._v(" "),s("li",[s("router-link",{attrs:{to:"/docs/tutorial_binding.html"}},[s("strong",[t._v("Binding C++ class functions")])]),t._v(" - Binding classes and functions so you can use them in Wren.")],1),t._v(" "),s("li",[s("router-link",{attrs:{to:"/docs/tutorial_variables.html"}},[s("strong",[t._v("Binding C++ class variables")])]),t._v(" - Binding functions as properties or simple variables, with optional read-only variables.")],1),t._v(" "),s("li",[s("router-link",{attrs:{to:"/docs/tutorial_abstract.html"}},[s("strong",[t._v("Binding C++ abstract classes")])]),t._v(" - How to bind abstract classes.")],1),t._v(" "),s("li",[s("router-link",{attrs:{to:"/docs/tutorial_operators.html"}},[s("strong",[t._v("Binding C++ class operators")])]),t._v(" - Binding overloaded C++ operators such as + - * /.")],1),t._v(" "),s("li",[s("router-link",{attrs:{to:"/docs/tutorial_pass_by_move.html"}},[s("strong",[t._v("Pass C++ variables by move")])]),t._v(" - Example of how to pass a C++ class instance to Wren by move instead of a copy. This only applies when calling Wren functions.")],1),t._v(" "),s("li",[s("router-link",{attrs:{to:"/docs/tutorial_pass_by_ref.html"}},[s("strong",[t._v("Pass C++ variables by reference or pointer")])]),t._v(" - Example of how to pass a C++ class instance to Wren by a reference or by a pointer instead of a copy. This only applies when calling Wren functions.")],1),t._v(" "),s("li",[s("router-link",{attrs:{to:"/docs/tutorial_call_wren.html"}},[s("strong",[t._v("Call Wren from C++")])]),t._v(" - Call Wren functions from C++ and pass or return variables.")],1),t._v(" "),s("li",[s("router-link",{attrs:{to:"/docs/tutorial_lifetime.html"}},[s("strong",[t._v("Lifetime of objects returned by Wren")])]),t._v(" - When does the Wren frees the memory of objects you get from Wren?")],1),t._v(" "),s("li",[s("router-link",{attrs:{to:"/docs/tutorial_lifetime_cpp.html"}},[s("strong",[t._v("Lifetime of objects passed into Wren")])]),t._v(" - When does the Wren frees the memory of objects passed into the Wren?")],1),t._v(" "),s("li",[s("router-link",{attrs:{to:"/docs/tutorial_ext_functions.html"}},[s("strong",[t._v("Binding C++ class methods via external functions")])]),t._v(" - Alternative way of binding classes to Wren.")],1),t._v(" "),s("li",[s("router-link",{attrs:{to:"/docs/tutorial_building.html"}},[s("strong",[t._v("Creating modules and custom raw modules")])]),t._v(' - Modules and internal buildin modules, with optional "raw" modules via strings.')],1),t._v(" "),s("li",[s("router-link",{attrs:{to:"/docs/tutorial_modules.html"}},[s("strong",[t._v("External files and modularity")])]),t._v(" - Loading external wren files and lookup paths explained.")],1),t._v(" "),s("li",[s("router-link",{attrs:{to:"/docs/tutorial_inheritance.html"}},[s("strong",[t._v("Inheritance via composition")])]),t._v(" - A workaround of inheriting C++ classes in Wren.")],1),t._v(" "),s("li",[s("router-link",{attrs:{to:"/docs/tutorial_callbacks_fn.html"}},[s("strong",[t._v("Using callbacks via Fn.new")])]),t._v(" - Pass functions from Wren to C++ to be used as callbacks.")],1),t._v(" "),s("li",[s("router-link",{attrs:{to:"/docs/tutorial_upcasting.html"}},[s("strong",[t._v("Upcasting")])]),t._v(" - Upcasting, when passing around derived classes into functions which accept base class pointers or references.")],1),t._v(" "),s("li",[s("router-link",{attrs:{to:"/docs/tutorial_lists.html"}},[s("strong",[t._v("Lists")])]),t._v(" - Custom arrays and lists.")],1),t._v(" "),s("li",[s("router-link",{attrs:{to:"/docs/tutorial_variant.html"}},[s("strong",[t._v("Accept multiple types via std::variant")])]),t._v(" - Accepting more than one type into C++ function from Wren.")],1),t._v(" "),s("li",[s("router-link",{attrs:{to:"/docs/tutorial_customize.html"}},[s("strong",[t._v("Customize VM behavior")])]),t._v(" - Customize how the VM behaves such as specifying where does System.print outputs.")],1)])])}),[],!1,null,null,null);o.default=e.exports}}]);