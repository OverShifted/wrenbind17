(window.webpackJsonp=window.webpackJsonp||[]).push([[153],{352:function(t,o,e){"use strict";e.r(o);var i=e(0),s=Object(i.a)({},(function(){var t=this,o=t.$createElement,e=t._self._c||o;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"tutorials"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#tutorials","aria-hidden":"true"}},[t._v("#")]),t._v(" Tutorials")]),t._v(" "),e("ul",[e("li",[e("router-link",{attrs:{to:"/docs/tutorial_installation.html"}},[t._v("Installation")]),t._v(" - Install and how to include this library.")],1),t._v(" "),e("li",[e("router-link",{attrs:{to:"/docs/tutorial_hello_world.html"}},[t._v("Hello World")]),t._v(" - The most basic full example.")],1),t._v(" "),e("li",[e("router-link",{attrs:{to:"/docs/tutorial_executing_code.html"}},[t._v("Alternative ways of executing Wren code")]),t._v(" - Run Wren code from file, string, module, etc.")],1),t._v(" "),e("li",[e("router-link",{attrs:{to:"/docs/tutorial_exceptions.html"}},[t._v("Handling exceptions")]),t._v(" - Handling C++ exceptions inside of Wren (TODO).")],1),t._v(" "),e("li",[e("router-link",{attrs:{to:"/docs/tutorial_binding.html"}},[t._v("Binding C++ class functions")]),t._v(" - Binding classes and functions so you can use them in Wren.")],1),t._v(" "),e("li",[e("router-link",{attrs:{to:"/docs/tutorial_variables.html"}},[t._v("Binding C++ class variables")]),t._v(" - Binding functions as properties or simple variables, with optional read-only variables.")],1),t._v(" "),e("li",[e("router-link",{attrs:{to:"/docs/tutorial_abstract.html"}},[t._v("Binding C++ abstract classes")]),t._v(" - How to bind abstract classes.")],1),t._v(" "),e("li",[e("router-link",{attrs:{to:"/docs/tutorial_operators.html"}},[t._v("Binding C++ class operators")]),t._v(" - Binding overloaded C++ operators such as + - * /.")],1),t._v(" "),e("li",[e("router-link",{attrs:{to:"/docs/tutorial_call_wren.html"}},[t._v("Call Wren from C++")]),t._v(" - Call Wren functions from C++ and pass or return variables.")],1),t._v(" "),e("li",[e("router-link",{attrs:{to:"/docs/tutorial_lifetime.html"}},[t._v("Lifetime of objects returned by Wren")]),t._v(" - When does the Wren frees the memory of objects you get from Wren?")],1),t._v(" "),e("li",[e("router-link",{attrs:{to:"/docs/tutorial_lifetime_cpp.html"}},[t._v("Lifetime of objects passed into Wren")]),t._v(" - When does the Wren frees the memory of objects passed into the Wren?")],1),t._v(" "),e("li",[e("router-link",{attrs:{to:"/docs/tutorial_ext_functions.html"}},[t._v("Binding C++ class methods via external functions")]),t._v(" - Alternative way of binding classes to Wren.")],1),t._v(" "),e("li",[e("router-link",{attrs:{to:"/docs/tutorial_buildin.html"}},[t._v("Creating modules and custom raw modules")]),t._v(' - Modules and internal buildin modules, with optional "raw" modules via strings.')],1),t._v(" "),e("li",[e("router-link",{attrs:{to:"/docs/tutorial_modules.html"}},[t._v("External files and modularity")]),t._v(" - Loading external wren files and lookup paths explained.")],1),t._v(" "),e("li",[e("router-link",{attrs:{to:"/docs/tutorial_inheritance.html"}},[t._v("Inheritance via composition")]),t._v(" - A workaround of inheriting C++ classes in Wren.")],1),t._v(" "),e("li",[e("router-link",{attrs:{to:"/docs/tutorial_callbacks_fn.html"}},[t._v("Using callbacks via Fn.new")]),t._v(" - Pass functions from Wren to C++ to be used as callbacks.")],1),t._v(" "),e("li",[e("router-link",{attrs:{to:"/docs/tutorial_upcasting.html"}},[t._v("Upcasting")]),t._v(" - Upcasting, when passing around derived classes into functions which accept base class pointers or references.")],1),t._v(" "),e("li",[e("router-link",{attrs:{to:"/docs/tutorial_lists.html"}},[t._v("Lists")]),t._v(" - Custom arrays and lists.")],1),t._v(" "),e("li",[e("router-link",{attrs:{to:"/docs/tutorial_variant.html"}},[t._v("Accept multiple types via std::variant")]),t._v(" - Accepting more than one type into C++ function from Wren.")],1),t._v(" "),e("li",[e("router-link",{attrs:{to:"/docs/tutorial_customize.html"}},[t._v("Customize VM behavior")]),t._v(" - Customize how the VM behaves such as specifying where does System.print outputs (TODO).")],1)])])}),[],!1,null,null,null);o.default=s.exports}}]);